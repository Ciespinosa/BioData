##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta$Bioma <- dta$filtroE
dta$Bioma[dta$filtroE %in% secos] <- "Bosques secos"
dta$Bioma[!dta$filtroE %in% secos] <- "Bosques lluviosos"
#dta <- dta[complete.cases(dta[,c("filtroP", "filtroE")]),]
write.csv2(dta, "2._data/dta.csv")
#source("3._script/DataChart.R", encoding = "UTF-8")
#source("3._script/E_ecoregion.R", encoding = "UTF-8")
dta <- read.csv2("2._data/dta.csv")[,-1]
dta1 <- read.csv2("2._data/dta1.csv")[,-1]
#source("3._script/DataChart.R", encoding = "UTF-8")
#source("3._script/E_ecoregion.R", encoding = "UTF-8")
dta <- read.csv2("2._data/dta.csv")[,-1]
dta1 <- read.csv2("2._data/dta1.csv")[,-1]
View(dta1)
runApp('BioData.R')
table(dta1$Clase)
sum(table(dta1$Clase))
dfT <- as.data.frame.matrix(table(dta1$Tematica,dta1$Clase))
dfTot <- colSums(dfT)
dfT
dfTot
runApp('BioData.R')
View(dta1)
#extraer por Ecoregion
library(sf)
library(raster)
library(tmap)
source("3._script/datos2.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
##Transformamos en datos espaciales
dta_spoint <- dta1
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta1 <- cbind(dta1, filtroE = dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta1$Bioma <- dta1$filtroE
dta1$Bioma[dta1$filtroE %in% secos] <- "Bosques secos"
dta1$Bioma[!dta1$filtroE %in% secos] <- "Bosques lluviosos"
#dta1 <- dta1[complete.cases(dta1[,c("filtroP", "filtroE")]),]
dta1$Clase <- factor(dta1$Clase, levels = c( "AVES","AMPHIBIA", "MAMMALIA", "PECES", "REPTILIA"))
View(dta1)
#extraer por Ecoregion
library(sf)
library(raster)
library(tmap)
source("3._script/datos2.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
##Transformamos en datos espaciales
dta_spoint <- dta1
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
source("3._script/datos2.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
dta_spoint <- dta1
dta_spoint
View(dta_spoint)
source("3._script/datos2.R", encoding = "UTF-8")
source("3._script/datos2.R", encoding = "UTF-8")
View(dta1)
dta <- read_excel("2._data/VertebradosRT.xlsx", sheet = "Ubicacion")
clase <- read_excel("2._data/VertebradosRT.xlsx", sheet = "Taxonomia")
tipo <- read_excel("2._data/VertebradosRT.xlsx", sheet = "Bibliografia")
clase <- unique(clase[,c("Codigo", "Clase")])
View(dta)
dta <- read_excel("2._data/VertebradosRT.xlsx", sheet = "Ubicacion")
View(dta)
source("3._script/datos2.R", encoding = "UTF-8")
View(dta1)
dta_spoint <- dta1
dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
dta_spoint <- dta1[complete.cases(dta1[,c("X", "Y")])]
dta_spoint <- dta1[complete.cases(dta1[,c("X", "Y")]),]
dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
dta_spoint <- dta1[complete.cases(dta1[,c("X", "Y")]),]
dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta1 <- cbind(dta1, filtroE = dtaext$ECO_NAME, filtroP=dtaext$name)
dta1 <- dta1[complete.cases(dta1[,c("X", "Y")]),]
##Unificamos los datos
dta1 <- cbind(dta1, filtroE = dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta1$Bioma <- dta1$filtroE
dta1$Bioma[dta1$filtroE %in% secos] <- "Bosques secos"
dta1$Bioma[!dta1$filtroE %in% secos] <- "Bosques lluviosos"
dta1$Clase <- factor(dta1$Clase, levels = c( "AVES","AMPHIBIA", "MAMMALIA", "PECES", "REPTILIA"))
runApp('BioData.R')
source('~/GitHub/BioData/3._script/DataChart.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source(file = "3._script/datos.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
dta_spoint <- dta
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
dta_spoint <- dta[complete.cases(dta[,c("X", "Y")]),]
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
dta <- <- dta[complete.cases(dta[,c("X", "Y")]),]
##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta$Bioma <- dta$filtroE
##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
source(file = "3._script/datos.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
##Transformamos en datos espaciales
dta <- dta[complete.cases(dta[,c("X", "Y")]),]
dta_spoint <- dta
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta$Bioma <- dta$filtroE
dta$Bioma[dta$filtroE %in% secos] <- "Bosques secos"
dta$Bioma[!dta$filtroE %in% secos] <- "Bosques lluviosos"
write.csv2(dta, "2._data/dta.csv")
#source("3._script/DataChart.R", encoding = "UTF-8")
#source("3._script/E_ecoregion.R", encoding = "UTF-8")
dta <- read.csv2("2._data/dta.csv")[,-1]
dta1 <- read.csv2("2._data/dta1.csv")[,-1]
runApp('BioData.R')
dta$Clase <- factor(dta$Clase)
dta$Clase
runApp('BioData.R')
unique(dta$Clase)
runApp('BioData.R')
c("TOTAL", unique(dta$Clase))
c("TOTAL", as.character(unique(dta$Clase)))
runApp('BioData.R')
textR <- str_c(dta1$Resumen, collapse = " ")
textT <- str_c(dta1$Título, collapse = " ")
textR
textR <- str_c(dta1$Resumen, collapse = " ")
textR
dta1$Resumen
str_c(dta1$Resumen
)
str_c(dta1$Resumen, collapse = " ")
str_c(dta1$Resumen, collapse = "")
str_c(dta1$Resumen, collapse = ",")
textR <- str_c(dta1$Resumen)
textT <- str_c(dta1$Título)
textRT <- str_c(textR, textT, collapse = " ")
textRT
textRT <- str_c(textR, textT)
textRT
textR <- str_c(dta1$Resumen, collapse = "")
textR
textR <- str_c(na.omit(dta1$Resumen), collapse = "")
textT <- str_c(dta1$Título)
textR
textT <- str_c(na.omit(dta1$Titulo), collapse = " ")
textRT <- str_c(textR, textT, collapse = " ")
runApp('BioData.R')
c("TOTAL", as.character(unique(dta$Clase)))
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
dta1$Bioma
runApp('BioData.R')
dta1$Clase
dta1.1$Clase
dta1$Clase
runApp('BioData.R')
View(dta1)
runApp('BioData.R')
dta1.1 <- dta1%>% subset(Bioma=="Bosques secos" & Pais=="Ecuador")
dta1.1 <- dta1%>% subset(Bioma=="Bosques secos" & Pais=="Ecuador")
dta1.1
dta1.1 <- dta1%>% subset(Bioma=="Bosques secos" & Pais=="Peru")
dta1.1 <- dta1%>% subset(Bioma=="Bosques lluviosos" & Pais=="Peru")
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
textR <- str_c(na.omit(dta1.1$Resumen))
textR
dta1.1$Titulo
dta1.1$Autor
textA
textA <- str_c(na.omit(dta1.1$Autor), collapse = " ")
textA
Aptd <- PlainTextDocument(textA,id = basename(tempfile()),
language = "en")
Aptd
Aptd{1}
Aptd[1]
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
dfT1 <- as.data.frame.matrix(table(dta1$Tematica,dta1$Clase))
dfT1
dcast(dta1, Tematica~Clase)
# if(input$eco1!="TOTAL" & input$pais1=="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
# if(input$eco1!="TOTAL" & input$pais1!="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1 &Pais==input$pais1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
#
# if(input$eco1=="TOTAL" & input$pais1=="TOTAL"){
dfT1 <- dcast(na.omit(dta1), Tematica~Clase)
dfT1
# if(input$eco1!="TOTAL" & input$pais1=="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
# if(input$eco1!="TOTAL" & input$pais1!="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1 &Pais==input$pais1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
#
# if(input$eco1=="TOTAL" & input$pais1=="TOTAL"){
dfT1 <- dcast(dta1, Tematica~Clase)
dfT1
rownames(dfT1)
# if(input$eco1!="TOTAL" & input$pais1=="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
# if(input$eco1!="TOTAL" & input$pais1!="TOTAL"){
#   dta1.1 <- dta1 %>% subset(Bioma==input$eco1 &Pais==input$pais1)
#   dfT1 <- as.data.frame.matrix(table(dta1.1$Tematica,dta1$Clase))
# }
#
# if(input$eco1=="TOTAL" & input$pais1=="TOTAL"){
dfT1 <- dcast(dta1, Tematica~Clase)[-9,-7]
dfT1
fig2 <- plot_ly(dfT1, x = ~Tematica , y = ~AVES, type = 'bar',
name = "Aves",
height = 310)
fig2 <- fig2 %>% add_trace(y = ~AMPHIBIA, name = "Anfibios")
fig2 <- fig2 %>% add_trace(y = ~MAMMALIA, name = "Mamiferos")
fig2 <- fig2 %>% add_trace(y = ~PECES, name = "Peces")
fig2 <- fig2 %>% add_trace(y = ~REPTILIA, name = "Reptiles")
fig2 <- fig2 %>% layout(yaxis = list(title = 'Número',
tickfont = list(size = 8)),
xaxis = list(title = "",
tickfont = list(size = 8)),
legend = list(x = .8, y = .99,
font = list(
family = "sans-serif",
size = 8),
title=list(text='<b>Grupo taxonómico </b>',
font = list(size = 9))),
margin = list(l = 30, r = .20, b = 50, t = .10))
fig2
runApp('BioData.R')
fig2 <- plot_ly(dfT1, x = ~Tematica , y = ~AVES, type = 'bar',
name = "Aves",
height = 310)
fig2 <- fig2 %>% add_trace(y = ~AMPHIBIA, name = "Anfibios")
fig2 <- fig2 %>% add_trace(y = ~MAMMALIA, name = "Mamiferos")
fig2 <- fig2 %>% add_trace(y = ~PECES, name = "Peces")
fig2 <- fig2 %>% add_trace(y = ~REPTILIA, name = "Reptiles")
fig2 <- fig2 %>% layout(yaxis = list(title = 'Número',
tickfont = list(size = 8)),
xaxis = list(title = "",
tickfont = list(size = 8)),
legend = list(x = .8, y = .99,
font = list(
family = "sans-serif",
size = 8),
title=list(text='<b>Grupo taxonómico </b>',
font = list(size = 9))),
margin = list(l = 30, r = .20, b = 50, t = .10))
fig2
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
dfT1
barplot(dfT1[,-1])
barplot(as.matrix(dfT1[,-1]))
barplot(as.matrix(dfT1[,-1]), beside=T)
barplot(as.matrix(t(dfT1[,-1])), beside=T, col= brewer.pal(5))
barplot(as.matrix(t(dfT1[,-1])), beside=T)
barplot(as.matrix(t(dfT1[,-1])), beside=T, col= brewer.pal(5), names = dfT1$Tematica)
barplot(as.matrix(t(dfT1[,-1])), beside=T, col= brewer.pal(5), labels() = dfT1$Tematica)
barplot(as.matrix(t(dfT1[,-1])), beside=T, col= brewer.pal(5), labels = dfT1$Tematica)
barplot(as.matrix(t(dfT1)), beside=T, col= brewer.pal(5), labels = dfT1$Tematica)
dfT1 <- dcast(dta1, Clase~Tematica)[-7,-9]
barplot(as.matrix(dfT1[,-1]), beside=T, col = brewer.pal(5))
dfT1
dfT1 <- dcast(dta1, Clase~Tematica)
dfT1
dfT1 <- dcast(dta1, Clase~Tematica)[-6,-10]
dfT1
barplot(as.matrix(dfT1[,-1]), beside=T, col = brewer.pal(5))
barplot(as.matrix(dfT1), beside=T, col = brewer.pal(5))
barplot(as.matrix(dfT1), beside=T)
barplot(as.matrix(dfT1[,-1]), beside=T)
barplot(as.matrix(dfT1[,-1]), beside=T, col = rainbow(5))
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
write.csv2(dta1, "2._data/dta1.csv", fileEncoding = "UTF-8")
source('~/GitHub/BioData/3._script/DataChart.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
runApp('BioData.R')
readr::write_csv(dta, "2._data/dta.csv", fileEncoding = "UTF-8")
#source("3._script/DataChart.R", encoding = "UTF-8")
#source("3._script/E_ecoregion.R", encoding = "UTF-8")
dta <- read.csv2("2._data/dta.csv")[,-1]
View(dta)
readr::write_csv(dta, "2._data/dta.csv")
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
#extraer por Ecoregion
# library(raster)
# library(rnaturalearth)
# world <- ne_countries(continent = "South America")
# class(world)
#
# world <- aggregate(world)
#
#
# ecoreg <- st_read("2._data/ecoregion/Terrestrial_Ecoregions_World.shp")
# ecoreg1 <- as_Spatial(ecoreg)
#
# crs(world) <- crs(ecoreg1)
#
# world <- gBuffer(world, byid=TRUE, width=0)
# ecoreg1 <- gBuffer(ecoreg1, byid=TRUE, width=0)
#
# ecoSouth <- raster:::intersect(world,ecoreg1)
# tm_shape(ecoSouth) + tm_fill(col="ECO_NAME") +tm_borders(col = "white")
#
#
# ecoSouth <- st_as_sf(ecoSouth)
# st_write(ecoSouth, "2._data/ecoregion/ecoSouth.shp", driver="ESRI Shapefile")
library(sf)
library(raster)
library(tmap)
source(file = "3._script/datos.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
##Transformamos en datos espaciales
dta <- dta[complete.cases(dta[,c("X", "Y")]),]
dta_spoint <- dta
#dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta <- cbind(dta, filtroE=dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta$Bioma <- dta$filtroE
dta$Bioma[dta$filtroE %in% secos] <- "Bosques secos"
dta$Bioma[!dta$filtroE %in% secos] <- "Bosques lluviosos"
readr::write_csv(dta, "2._data/dta.csv")
View(dta)
readr::write_csv(dta, "2._data/dta.csv", fileEncoding = "UTF-8")
readr::write_csv(dta, "2._data/dta.csv", Encoding = "UTF-8")
readr::write_csv(dta, "2._data/dta.csv", encoding = "UTF-8")
readr::write_csv(dta, "2._data/dta.csv")
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/DataChart.R', encoding = 'UTF-8')
rm(list = setdiff(ls(), c("dta", "dta1")))
save.image("~/GitHub/BioData/data.rdata.RData")
load("~/GitHub/BioData/data.RData")
View(dta)
View(dta1)
runApp('BioData.R')
View(dta)
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
source('~/GitHub/BioData/3._script/DataChart.R', encoding = 'UTF-8')
rm(list = setdiff(ls(), c("dta", "dta1")))
runApp('BioData.R')
load("data.RData")
dta1$Clase
dta$Clase
View(dta)
source('~/GitHub/BioData/3._script/E_ecoregion.R', encoding = 'UTF-8')
View(dta)
#extraer por Ecoregion
library(sf)
library(raster)
library(tmap)
source("3._script/datos2.R", encoding = "UTF-8")
ecoreg <- st_read("2._data/ecoregion/ecoSouth.shp")
##Transformamos en datos espaciales
dta_spoint <- dta1[complete.cases(dta1[,c("X", "Y")]),]
dta1 <- dta1[complete.cases(dta1[,c("X", "Y")]),]
dta_spoint$country <- droplevels(as.factor(dta_spoint$Pais), exclude = 0)
coordinates(dta_spoint) <-  ~Y+X
ecoreg1 <- as_Spatial(ecoreg)
##Unificamos la proyeccion espacial
crs(dta_spoint) <- crs(ecoreg1)
##Extraemos los datos de la capa de fondo
dtaext <- over(dta_spoint, ecoreg1)
##Unificamos los datos
dta1 <- cbind(dta1, filtroE = dtaext$ECO_NAME, filtroP=dtaext$name)
secos <- c("South American Pacific mangroves",
"Tumbes-Piura dry forests",
"Ecuadorian dry forests",
"Eastern Cordillera real montane forests",
"Sechura desert",
"Guayaquil flooded grasslands" ,
"Marañón dry forests"
)
dta1$Bioma <- dta1$filtroE
dta1$Bioma[dta1$filtroE %in% secos] <- "Bosques secos"
dta1$Bioma[!dta1$filtroE %in% secos] <- "Bosques lluviosos"
#dta1 <- dta1[complete.cases(dta1[,c("filtroP", "filtroE")]),]
dta1$Clase <- factor(dta1$Clase, levels = c( "AVES","AMPHIBIA", "MAMMALIA", "PECES", "REPTILIA"))
rm(list = setdiff(ls(), c("dta", "dta1")))
save.image("data.RData")
load("data.RData")
(dta1$Clase)
(dta$Clase)
dta$Clase <- factor(dta$Clase)
dta$Clase
runApp('BioData.R')
runApp('BioData.R')
load("data.RData")
View(dta)
View(dta)
View(dta1)
View(dta1)
library(shiny); runApp('BioData.R')
runApp('BioData.R')
runApp('BioData.R')
